<?php


namespace Nemundo\App\ModelDesigner\Page\Type;


use Nemundo\App\ModelDesigner\Com\Breadcrumb\ModelDesignerBreadcrumb;
use Nemundo\App\ModelDesigner\Com\Form\TypeForm;
use Nemundo\App\ModelDesigner\Parameter\AppParameter;
use Nemundo\App\ModelDesigner\Parameter\ModelParameter;
use Nemundo\App\ModelDesigner\Parameter\ProjectParameter;
use Nemundo\App\ModelDesigner\Parameter\TypeParameter;
use Nemundo\App\ModelDesigner\Site\ModelSite;
use Nemundo\App\ModelDesigner\Site\Type\TypeNewSite;
use Nemundo\App\ModelDesigner\Template\ModelDesignerTemplate;
use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;

class TypeNewPage extends ModelDesignerTemplate
{

    public function getContent()
    {

        $project = (new ProjectParameter())->getProject();
        $appJson = (new AppParameter())->getApp($project);
        $model = (new ModelParameter())->getModel($appJson);
        $type = (new TypeParameter())->getType();

        $breadcrumb = new ModelDesignerBreadcrumb($this);
        $breadcrumb->addProject($project);
        $breadcrumb->addApp($appJson);
        $breadcrumb->addModel($model);
        //$breadcrumb->addActiveItem($this->title . ' (' . $type->typeLabel . ')');
        $breadcrumb->addActiveItem( TypeNewSite::$site->title . ' (' . $type->typeLabel . ')');

        $layout = new BootstrapTwoColumnLayout($this);

        $form = new TypeForm($layout->col1);
        $form->project = $project;
        $form->appJson = $appJson;
        $form->model = $model;
        $form->type = $type;
        $form->redirectSite = clone(ModelSite::$site);
        $form->redirectSite->addParameter(new ProjectParameter());
        $form->redirectSite->addParameter(new AppParameter());
        $form->redirectSite->addParameter(new ModelParameter());

        return parent::getContent(); // TODO: Change the autogenerated stub

    }

}
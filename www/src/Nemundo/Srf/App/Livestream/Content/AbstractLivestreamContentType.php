<?php

namespace Nemundo\Srf\App\Livestream\Content;


use Nemundo\Content\Type\AbstractSearchContentType;
use Nemundo\Srf\App\Livestream\Data\RadioLivestream\RadioLivestream;
use Nemundo\Srf\App\Livestream\Data\RadioLivestream\RadioLivestreamId;
use Nemundo\Srf\App\Livestream\Data\RadioLivestream\RadioLivestreamReader;
use Nemundo\Srf\App\Livestream\Data\RadioLivestream\RadioLivestreamRow;

abstract class AbstractLivestreamContentType extends AbstractSearchContentType
{

    public $livestream;

    public $urn;



    /*
    protected function onCreate()
    {


        $data = new RadioLivestream();
        $data->updateOnDuplicate = true;
        $data->livestream = $this->livestream;
        $data->urn = $this->urn;
        $data->save();

        $id = new RadioLivestreamId();
        $id->filter->andEqual($id->model->urn, $this->urn);
        $this->dataId = $id->getId();

    }

    protected function onUpdate()
    {
    }

    protected function onDelete()
    {

    }*/


    protected function onIndex()
    {
        $this->addSearchWord($this->getDataRow()->livestream);
        // parent::onIndex(); // TODO: Change the autogenerated stub
    }


    protected function onDataRow()
    {
        $this->dataRow=(new RadioLivestreamReader())->getRowById($this->dataId);
    }

    /**
     * @return \Nemundo\Model\Row\AbstractModelDataRow|RadioLivestreamRow
     */
    public function getDataRow()
    {
        return parent::getDataRow();
    }


    public function getSubject()
    {
        return $this->getDataRow()->livestream;  // parent::getSubject(); // TODO: Change the autogenerated stub
    }


}